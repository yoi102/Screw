<Window x:Class="Screw.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing" 
        mc:Ignorable="d" Name="Window1"
        xmlns:utility="clr-namespace:Screw.Utilities"
        xmlns:dj="clr-namespace:DJ;assembly=NLogViewer"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:local="clr-namespace:Screw" 
        xmlns:views="clr-namespace:Screw.View" xmlns:viewmodel="clr-namespace:Screw.ViewModel" d:DataContext="{d:DesignInstance Type=viewmodel:ViewModelMain}"
        Title="SA_ver 1.3.7" Height="1280" Width="1256"  Background="#FF2D2D30" Closing="Window_Closing" WindowState="Maximized">
    <Window.Resources>
        <utility:ConverterJudgeText x:Key="JudgeTextCircular"/>
        <utility:ConverterJudgeColor x:Key="JudgeColorCircular"/>
        <utility:ConverterJudgeColor2 x:Key="JudgeColor_TabletPredictor"/>
        <utility:ConverterJudgeText2 x:Key="JudgeText_TabletPredictor"/>
        <utility:ConverterConnectionColor x:Key="ConnectionColorConverter"/>
        <utility:ConverterConnection2Color x:Key="Connection2ColorConverter"/>
        <utility:ConverterVisibilityColor x:Key="ConverterVisibilityColor"/>
        <utility:ConverterBool2BoolInv x:Key="Bool2BoolInv"/>
        <BooleanToVisibilityConverter x:Key="Bool2Visbility"/>
        <utility:ConverterBool2Visibility x:Key="Bool2VisbilityInv"/>

        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate  TargetType="{x:Type Button}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="Storyboard1">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="grid">
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.25" Value="1.25"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="grid">
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.25" Value="1.25"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="Storyboard2">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="grid">
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.25" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="grid">
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.25" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid x:Name="grid" RenderTransformOrigin="0.5,0.5" >
                            <Grid.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Grid.RenderTransform>
                            <Border Name="border" CornerRadius="5" Height="{TemplateBinding Height}"
                           Width="{TemplateBinding Width}" >
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFE6E39E"/>
                                        <GradientStop Color="#FFF5A1A1" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <TextBlock Margin="5" Text="{TemplateBinding Content}"  VerticalAlignment="Center" HorizontalAlignment="Center" />
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True"/>
                            <Trigger Property="IsDefaulted" Value="True"/>
                            <!--鼠标路过时-->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FF9FE273"/>
                                            <GradientStop Color="#FF3BFFAA" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Trigger.ExitActions>
                                    <BeginStoryboard x:Name="Storyboard_Copy1_BeginStoryboard" Storyboard="{StaticResource Storyboard2}"/>
                                </Trigger.ExitActions>
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource Storyboard1}"/>
                                </Trigger.EnterActions>
                            </Trigger>
                            <!--鼠标点击时-->
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFDC6161"/>
                                            <GradientStop Color="#FFFFA0A0" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <!--按钮禁用时-->
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" TargetName="border">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFCECDA9"/>
                                            <GradientStop Color="#FF2E13F3" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate  TargetType="{x:Type Button}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="Storyboard1">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="grid">
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.5" Value="1.25"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="grid">
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.5" Value="1.25"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="Storyboard2">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="grid">
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="grid">
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid x:Name="grid" RenderTransformOrigin="0.5,0.5">
                            <Grid.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Grid.RenderTransform>
                            <Label Name="lbl" Content="{TemplateBinding Content}" Background="Transparent" Height="{TemplateBinding Height}"
                           Width="{TemplateBinding Width}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True"/>
                            <Trigger Property="IsDefaulted" Value="True"/>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="lbl" Value="#330091FF"/>
                                <Trigger.ExitActions>
                                    <BeginStoryboard x:Name="Storyboard_Copy1_BeginStoryboard" Storyboard="{StaticResource Storyboard2}"/>
                                </Trigger.ExitActions>
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource Storyboard1}"/>
                                </Trigger.EnterActions>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="lbl" Value="#000000FF"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="BtnImage" TargetType="Image">
            <Setter Property="Height" Value="20"></Setter>
            <Setter Property="Width" Value="20"></Setter>
            <Setter Property="Opacity" Value="1"></Setter>
            <Style.Triggers>
                <EventTrigger RoutedEvent="MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation  Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.1"/>
                            <DoubleAnimation  Storyboard.TargetProperty="Width" To="24" Duration="0:0:0.1"/>
                            <DoubleAnimation  Storyboard.TargetProperty="Height" To="24" Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="MouseLeave">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation  Storyboard.TargetProperty="Opacity" To="0.8" Duration="0:0:0.1"/>
                            <DoubleAnimation  Storyboard.TargetProperty="Width" To="20" Duration="0:0:0.1"/>
                            <DoubleAnimation  Storyboard.TargetProperty="Height" To="20" Duration="0:0:0.1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>


        </Style>

        <!--复选框控件-->

        <Style x:Key="CheckBoxStyle" TargetType="{x:Type CheckBox}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="False" />
            <!--<Setter Property="FocusVisualStyle" Value="{DynamicResource CheckBoxFocusVisual}"/>-->
            <Setter Property="Height" Value="52"/>
            <Setter Property="IsChecked" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid Height="{TemplateBinding Height}" Width="{TemplateBinding Height}">
                                <Rectangle x:Name="CheckBoxRectangle" Fill="White" Opacity="0.3" RadiusY="5" RadiusX="5"/>
                                <Rectangle x:Name="CheckBoxRectangleOut" Stroke="#FFABADB3" StrokeThickness="1" RadiusY="5" RadiusX="5"/>
                                <Grid x:Name="CheckedMark" Height="{TemplateBinding Height}" Width="{TemplateBinding Height}" Visibility="Collapsed" >
                                    <Viewbox>
                                        <Grid>
                                            <Path SnapsToDevicePixels="True" StrokeThickness="3" Data="M1,9 L10,17" Stroke="#3553ad"/>
                                            <Path SnapsToDevicePixels="True" StrokeThickness="3" Data="M8,17 L20,4" Stroke="#3553ad"/>
                                        </Grid>
                                    </Viewbox>
                                </Grid>
                            </Grid>
                            <ContentPresenter Grid.Column="1" VerticalAlignment="Center" Margin="8,0,0,0"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="CheckedMark" Property="Visibility" Value="Visible"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!--togg控件-->
        <Style x:Key="AndroidToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Viewbox>
                            <Border x:Name="Border" CornerRadius="10"
                            Background="#FFFFFFFF"
                            Width="40" Height="20">
                                <Border.Effect>
                                    <DropShadowEffect ShadowDepth="0.5" Direction="0" Opacity="0.3" />
                                </Border.Effect>
                                <Ellipse x:Name="Ellipse" Fill="#FFFFFFFF" Stretch="Uniform"
                                 Margin="2 1 2 1"
                                 Stroke="Gray" StrokeThickness="0.2"
                                 HorizontalAlignment="Stretch">
                                    <Ellipse.Effect>
                                        <DropShadowEffect BlurRadius="10" ShadowDepth="1" Opacity="0.3" Direction="260" />
                                    </Ellipse.Effect>
                                </Ellipse>
                            </Border>
                        </Viewbox>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="Checked">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="Border"
                                                    Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                    To="#FF4CD661"
                                                    Duration="0:0:0.1" />
                                        <ThicknessAnimation Storyboard.TargetName="Ellipse"
                                                        Storyboard.TargetProperty="Margin"
                                                        To="20 1 2 1"
                                                        Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Unchecked">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="Border"
                                                    Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                    To="White"
                                                    Duration="0:0:0.1" />
                                        <ThicknessAnimation Storyboard.TargetName="Ellipse"
                                                        Storyboard.TargetProperty="Margin"
                                                        To="2 1 2 1"
                                                        Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!--页面控件-->

        <Style x:Key="TabControlStyle" TargetType="{x:Type TabControl}">
            <Setter Property="Padding" Value="2"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="#FFACACAC"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">

                        <Grid x:Name="templateRoot" ClipToBounds="True" SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Local">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="ColumnDefinition0"/>
                                <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                                <RowDefinition x:Name="RowDefinition1" Height="*"/>
                            </Grid.RowDefinitions>
                            <UniformGrid x:Name="HeaderPanel" Rows="1" Background="Transparent" Grid.Column="0" IsItemsHost="True" Margin="0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
                            <Line X1="0" X2="{Binding ActualWidth, RelativeSource={RelativeSource Self}}" Stroke="White" StrokeThickness="0.1" VerticalAlignment="Bottom" Margin="0 0 0 1" SnapsToDevicePixels="True"/>
                            <Border x:Name="ContentPanel" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                                <ContentPresenter x:Name="PART_SelectedContentHost" ContentTemplate="{TemplateBinding SelectedContentTemplate}" Content="{TemplateBinding SelectedContent}" ContentStringFormat="{TemplateBinding SelectedContentStringFormat}" ContentSource="SelectedContent" Margin="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TabStripPlacement" Value="Bottom">
                                <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="1"/>
                                <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Left">
                                <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                                <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="ContentPanel" Value="1"/>
                                <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                                <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Right">
                                <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                                <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="1"/>
                                <Setter Property="Grid.Column" TargetName="ContentPanel" Value="0"/>
                                <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                                <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



        <Style x:Key="TabItemStyle" TargetType="TabItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <Grid >
                            <Border x:Name="bd"
                                    Background="Gray"
                                    Height="30"
                                    BorderBrush="Transparent"
                                    BorderThickness="0 0 0 0"
                                    CornerRadius="10"
                                    Margin="5" >
                                <TextBlock x:Name="txt" Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Header}" Foreground="WhiteSmoke" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="10 0 10 0"/>
                            </Border>
                            <Rectangle Fill="Red" Height="3" VerticalAlignment="Bottom" Visibility="Hidden" Name="LeftSideRectangle"></Rectangle>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter TargetName="bd" Property="BorderThickness" Value="0,0,0,0" />
                                <Setter TargetName="bd" Property="BorderBrush" Value="Transparent" />
                                <!--选择后的背景-->
                                <Setter TargetName="bd" Property="Background" Value="black" />
                                <Setter TargetName="LeftSideRectangle" Property="Visibility" Value="Visible"></Setter>
                                <!--<Setter TargetName="bd" Property="Background" Value="{StaticResource  defaultcolor}" />-->

                                <!--字体颜色选择后的-->
                                <Setter TargetName="txt" Property="Foreground" Value="White"/>
                            </Trigger>
                            <!--<Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="txt" Property="Foreground" Value="{StaticResource defaultoverbg}"/>
                        </Trigger>-->
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="False"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="txt" Property="Foreground" Value="WhiteSmoke"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>





    </Window.Resources>



    <Grid>
        <!--<views:uclStatusInfor Margin=" 50 100 100 100" Visibility="{Binding Clean_files_flag, Converter={StaticResource Bool2Visbility}}" Panel.ZIndex="2"/>-->
        <!--<views:uclDeviceStatus Margin=" 50 100 100 100" Visibility="{Binding Device_IsConnected, Converter={StaticResource Bool2VisbilityInv}}" Panel.ZIndex="2"/>-->
        <!--<views:uclControlContinuousBad Margin=" 50 100 100 100" Visibility="{Binding GreaseContinuousBad, Converter={StaticResource Bool2Visbility}}" Panel.ZIndex="3"/>-->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <StackPanel Grid.Column="0" Visibility="{Binding VisibilitySettings,Converter={StaticResource Bool2Visbility}}">
                <Expander Grid.Row="0" ExpandDirection="Right" Margin="2">
                    <Expander.Header>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Margin="2" 
                                   Text="Camera" 
                                   Foreground="Silver"/>
                            <Ellipse Margin="2"
                                 VerticalAlignment="Center"
                                 HorizontalAlignment="Center" 
                                 Width="10" Height="10"
                                 Fill="{Binding SpinCtrl.IsCamAvailable, Converter={StaticResource ConnectionColorConverter}}"/>
                            <!--make the header vertical-->
                            <StackPanel.LayoutTransform>
                                <RotateTransform Angle="90"/>
                            </StackPanel.LayoutTransform>
                        </StackPanel>
                    </Expander.Header>
                    <views:uclCamerasView DataContext="{Binding SpinCtrl}"/>
                </Expander>

                <Expander  ExpandDirection="Right" Margin="2,10,2,2">
                    <Expander.Header>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Margin="2" Text="PLC" Foreground="Silver"/>
                            <Ellipse Margin="2" VerticalAlignment="Center" HorizontalAlignment="Center" Width="10" Height="10"
                        Fill="{Binding PlcCtrl.PlcIsConnected, Converter={StaticResource Connection2ColorConverter}}"/>
                            <StackPanel.LayoutTransform>
                                <RotateTransform Angle="90"/>
                            </StackPanel.LayoutTransform>
                        </StackPanel>
                    </Expander.Header>
                    <views:uclPlcView/>
                </Expander>
            </StackPanel>

            <StackPanel Grid.Column="2" Panel.ZIndex="2">
                <Expander Visibility="{Binding VisibilitySettings,Converter={StaticResource Bool2Visbility}}" ExpandDirection="Left" Margin="2" HorizontalAlignment="Right">
                    <Expander.Header>
                        <TextBlock Margin="2" Text="Commands" Foreground="Silver">
                            <TextBlock.LayoutTransform>
                                <RotateTransform Angle="90"/>
                            </TextBlock.LayoutTransform>
                        </TextBlock>
                    </Expander.Header>
                    <views:uclCommandsView />
                </Expander>
            </StackPanel>

            <StackPanel Grid.Column="2" VerticalAlignment="Bottom" Orientation="Horizontal" Panel.ZIndex="1">
                <StackPanel.LayoutTransform>
                    <RotateTransform Angle="90"/>
                </StackPanel.LayoutTransform>
                <!--两种旋转方法都可-->
                <TextBlock Text="Cameras:" VerticalAlignment="Top" FontSize="26" Foreground="{Binding SpinCtrl.IsCamAvailable, Converter={StaticResource ConnectionColorConverter}}"/>
                <Ellipse Margin="10 10 20 10" VerticalAlignment="Top" HorizontalAlignment="Center"  Width="10" Height="10" Fill="{Binding SpinCtrl.IsCamAvailable, Converter={StaticResource ConnectionColorConverter}}"/>

                <TextBlock Text="PLC:" VerticalAlignment="Top" FontSize="26" Foreground="{Binding PlcCtrl.PlcIsConnected, Converter={StaticResource Connection2ColorConverter}}"  TextWrapping="Wrap"/>
                <Ellipse Margin="10 10 20 10" VerticalAlignment="Top" HorizontalAlignment="Center" Width="10" Height="10" Fill="{Binding PlcCtrl.PlcIsConnected, Converter={StaticResource Connection2ColorConverter}}"/>

                <!--<TextBlock Text="SerialPort:" VerticalAlignment="Top" FontSize="26" Foreground="{Binding SerialCtrl.serialIsConnect, Converter={StaticResource Connection2ColorConverter}}">
                    <TextBlock.LayoutTransform>
                        <RotateTransform Angle="0"/>
                    </TextBlock.LayoutTransform>
                </TextBlock>
                <Ellipse Margin="10 10 20 10" VerticalAlignment="Top" HorizontalAlignment="Center" Width="10" Height="10" Fill="{Binding SerialCtrl.serialIsConnect, Converter={StaticResource Connection2ColorConverter}}"/>-->
            
            </StackPanel>





            <Grid  Grid.Column="1" Visibility="Visible">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="150"/>
                    <!--日志固定高度后会自动伸缩，拉伸依然有效-->
                </Grid.RowDefinitions>
            
                
                
                <Grid Grid.Row="0">
                    <Grid.ColumnDefinitions >
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>
                    <GridSplitter Background="Black" Width="5"  HorizontalAlignment="Right"   VerticalAlignment="Stretch" />

                    <Grid Grid.Column="0">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0" >
                            <TabControl  Style="{StaticResource TabControlStyle}"  Background="#FF2D2D30">

                                <TabItem Header="全图" Style="{StaticResource TabItemStyle}">
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                        <views:uclCaptureImageView DataContext="{Binding ImageObjects[5]}"  Width="auto" Height="auto" HorizontalAlignment="Center" VerticalAlignment="Center"/>

                                        <StackPanel Visibility="{Binding VisibilitySettings,Converter={StaticResource Bool2Visbility}}">
                                            <Button  Margin="5" Content="备份" Command="{Binding BackupConfigsCommand}"></Button>
                                            <Button  Margin="5" Content="读取配置" Command="{Binding LoadParaCommand}"></Button>
                                            <Button  Margin="5" Content="保存配置" Command="{Binding SaveParaCommand}"></Button>
                                            <Button  Margin="5" Content="使用磁盘图片" Command="{Binding UseLocalImageCommand}"></Button>
                                            <Button  Margin="5" Content="设定基准点范围" Command="{Binding DatumRangeRoiSettingCommand}"></Button>
                                            <Button  Margin="5" Content="设定马达点范围" Command="{Binding AMotorRoiSettingCommand}"></Button>
                                            <Button  Margin="5" Content="设定压杆范围" Command="{Binding ATabletRoiSettingCommand}"></Button>
                                            <Button  Margin="5" Content="设定圆孔范围" Command="{Binding CircularRoiSettingCommand}"></Button>
                                            <Button  Margin="5" Content="用图片矫正master" Command="{Binding UseImageOriginCalibration2Command}"></Button>
                                            <Button  Margin="5" Content="用图片测量master" Command="{Binding UseImageTestMasterCircularXYCommand}"/>

                                        </StackPanel>

                                        <views:uclIforPanel/>

                                    </StackPanel>
                                </TabItem>

                                <TabItem Header="全部" Style="{StaticResource TabItemStyle}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <Image Grid.RowSpan="2" Margin="5" Source="{Binding ImageObjects[5].DisplayImage}"  />
                                        <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Center">
                                            <Image Margin="5" Grid.Column="1" Source="{Binding DisplayMotorImage}" HorizontalAlignment="Center" />
                                            <Image Margin="5" Grid.Row="1"  Source="{Binding DisplayTabletImage}"  HorizontalAlignment="Center"/>

                                        </StackPanel>
                                        <Image Margin="5" Grid.Row="1" Grid.Column="1" Source="{Binding DisplayCircularImage}" HorizontalAlignment="Center"/>
                                    </Grid>

                                </TabItem>

                                <TabItem Header="Roi图" Style="{StaticResource TabItemStyle}">
                                    <Grid >
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="AUTO"/>
                                            <ColumnDefinition Width="AUTO"/>
                                            <ColumnDefinition Width="AUTO"/>
                                            <ColumnDefinition Width="AUTO"/>
                                            <ColumnDefinition Width="AUTO"/>
                                        </Grid.ColumnDefinitions>
                                        <GroupBox   Grid.Column="0"   Header="Motor"     Foreground="WhiteSmoke" >
                                            <Image Source="{Binding DisplayMotorImage}"  />
                                        </GroupBox>
                                        <GridSplitter Grid.Column="1"  Background="Black"  Width="5"  HorizontalAlignment="Center" VerticalAlignment="Stretch" />

                                        <GroupBox  Grid.Column="2"   Header="Tablet"     Foreground="WhiteSmoke" >
                                            <Image Source="{Binding DisplayTabletImage}"  />
                                        </GroupBox>
                                        <GridSplitter Grid.Column="3"  Background="Black"  Width="5"  HorizontalAlignment="Center" VerticalAlignment="Stretch" />
                                        <GroupBox  Grid.Column="4" Header="定位点"    Foreground="WhiteSmoke"  >
                                            <Image Source="{Binding DisplayRoi_DatumPointRange}"  />

                                        </GroupBox>
                                    </Grid>
                                </TabItem>



                                <TabItem Header="圆孔" Style="{StaticResource TabItemStyle}">
                                    <Grid  >
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="AUTO"/>
                                            <ColumnDefinition Width="AUTO"/>
                                            <ColumnDefinition Width="AUTO"/>
                                            <ColumnDefinition Width="AUTO"/>
                                            <ColumnDefinition Width="AUTO"/>
                                        </Grid.ColumnDefinitions>
                                        <GroupBox   Grid.Column="0"  Header="Circular"     Foreground="WhiteSmoke"   Margin="5">
                                            <Image Source="{Binding DisplayCircularImage}"  />
                                        </GroupBox>
                                        <GridSplitter Grid.Column="1"  Background="Black"  Width="5"  HorizontalAlignment="Center" VerticalAlignment="Stretch" />

                                        <GroupBox    Grid.Column="2"   Header="CloseCircular"     Foreground="WhiteSmoke"  Margin="5">
                                            <Image Source="{Binding DisplayCloseCircularImage}"  />
                                        </GroupBox>
                                        <GridSplitter Grid.Column="3"  Background="Black"  Width="5"  HorizontalAlignment="Center" VerticalAlignment="Stretch" />

                                        <GroupBox    Grid.Column="4"     Header="CloseMotorCircular"     Foreground="WhiteSmoke"   Margin="5">
                                            <Image Source="{Binding DisplayCloseMotorCircularImage}"  />
                                        </GroupBox>
                                    </Grid>
                                </TabItem>


                            </TabControl>
                        </Grid>

                        <GridSplitter Background="Black"  Height="3" Grid.Row="1"  HorizontalAlignment="Stretch" VerticalAlignment="Center" />

                        <Grid Grid.Row="2">
                            <views:uclGreasePanel/>

                        </Grid>


                    </Grid>

                    <GroupBox Grid.Column="1" Header="States"   Foreground="WhiteSmoke">
                        <StackPanel>
                            <!--<Button  Content="开始" Command="{Binding BtnStartCommand}" Margin="6" Height="25"/>-->
                            <Grid ToolTip="右键可打开更多文件夹！">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <StackPanel >
                                    <Button  Style="{StaticResource ButtonStyle1}" Content="图片文件夹"  Command="{Binding OpenImageFolderCommand}" Margin="2 2 0 0"/>
                                    <!--<TextBlock Text="右键可选择更多文件" Foreground="WhiteSmoke" HorizontalAlignment="Center" VerticalAlignment="Center" />-->
                                    <Button Style="{StaticResource ButtonStyle}"  Command="{Binding CleanCommand}" Height="40" Width="40" Background="{x:Null}" BorderBrush="{x:Null}" >
                                        <Image    Source="Resources/erase-32.png" ToolTip="清理文件图片"/>
                                    </Button>
                                </StackPanel>
                                <StackPanel Grid.Column="1">
                                    <Button Style="{StaticResource ButtonStyle1}" Content="表格文件夹" Command="{Binding OpenDataFolderCommand}"  Margin="2 2 0 0"/>
                                    <Button Style="{StaticResource ButtonStyle1}" Margin="2 2 0 0" Content="备份" Command="{Binding BackupConfigsCommand}"></Button>
                                </StackPanel>
                                <Grid.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="马达压杆图" Command="{Binding OpenPressImageFolderCommand}" />
                                        <MenuItem Header="油脂正面图" Command="{Binding OpenDrop3ImageFolderCommand}" />
                                        <MenuItem Header="油脂反面图" Command="{Binding OpenDrop12ImageFolderCommand}" />
                                        <MenuItem Header="第一滴图" Command="{Binding OpenMinorDrop1ImageFolderCommand}" />
                                        <MenuItem Header="第二滴图" Command="{Binding OpenMinorDrop2ImageFolderCommand}" />
                                        <MenuItem Header="第三滴图" Command="{Binding OpenMinorDrop3ImageFolderCommand}" />
                                        <MenuItem Header="配置文件" Command="{Binding OpenConfigFolderCommand}" />
                                        <MenuItem Header="备份文件" Command="{Binding OpenBackupFolderCommand}" />
                                        <MenuItem Header="日志文件" Command="{Binding OpenLogesFolderCommand}" />
                                    </ContextMenu>
                                </Grid.ContextMenu>
                            </Grid>
                            <StackPanel Orientation="Horizontal">
                                <PasswordBox Grid.Column="0" Grid.Row="1" Margin="2" MinWidth="50" utility:PasswordHelper.Attach="True" Background="Transparent" Foreground="White"
                                             utility:PasswordHelper.Password="{Binding Password, Mode=TwoWay}"/>
                                <Button Grid.Column="1" Grid.Row="1" Margin="2" Content="解锁" Width="30" Height="20" Command="{Binding UnlockCommand}"/>
                                <TextBlock Text="修理模式： " HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="{Binding VisibilitySettings,Converter={StaticResource Bool2Visbility}}"/>
                                <ToggleButton IsChecked="{Binding RepairMode}" Style="{StaticResource AndroidToggleButton}" ToolTipService.ShowDuration="999999999"  ToolTip="修理模式，不计算螺丝孔位置！" Visibility="{Binding VisibilitySettings,Converter={StaticResource Bool2Visbility}}" />
                            </StackPanel>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                </Grid.RowDefinitions>
                                <TextBlock  Foreground="WhiteSmoke" ToolTip="圆孔像素位置"
                                        HorizontalAlignment="Left" 
                                        Height="23" Margin="6" 
                                        TextWrapping="Wrap" 
                                        Text="X:" 
                                        VerticalAlignment="Top" 
                                        Width="22" 
                                        FontSize="18"/>
                                <TextBlock Grid.Column="1" ToolTip="圆孔像素位置"
                                       Foreground="WhiteSmoke" 
                                       HorizontalAlignment="Left"
                                       Height="23" 
                                       Margin="6"
                                       TextWrapping="Wrap"
                                       Text="{Binding OpCircularCentroidX}" 
                                       VerticalAlignment="Top" 
                                       Width="120" FontSize="18"/>
                                <TextBlock Grid.Row="1" ToolTip="圆孔像素位置"
                                       Foreground="WhiteSmoke"
                                       HorizontalAlignment="Left"
                                       Height="23" Margin="6" 
                                       TextWrapping="Wrap"
                                       Text="Y:" 
                                       VerticalAlignment="Top" Width="22" FontSize="18"/>
                                <TextBlock Grid.Row="1" ToolTip="圆孔像素位置"
                                       Grid.Column="1"
                                       Foreground="WhiteSmoke" 
                                       HorizontalAlignment="Left"
                                       Height="23" Margin="6" 
                                       TextWrapping="Wrap" 
                                       Text="{Binding OpCircularCentroidY}" 
                                       VerticalAlignment="Top" 
                                       Width="120" FontSize="18"/>
                            </Grid>
                            <Grid>

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                </Grid.RowDefinitions>
                                <TextBlock  Foreground="WhiteSmoke" ToolTip="圆孔偏移量"
                                        HorizontalAlignment="Left" 
                                        Height="23" Margin="6" 
                                        TextWrapping="Wrap" 
                                        Text="X_x:" 
                                        VerticalAlignment="Center" 
                                        Width="22" 
                                        FontSize="18"/>
                                <TextBlock Grid.Column="1"  ToolTip="圆孔偏移量"
                                       Foreground="WhiteSmoke" 
                                       HorizontalAlignment="Left"
                                       Height="23" 
                                       Margin="6"
                                       TextWrapping="Wrap"
                                       Text="{Binding ShiftX }" 
                                       VerticalAlignment="Center" 
                                       Width="120" FontSize="18"/>
                                <TextBlock Grid.Row="1"  ToolTip="圆孔偏移量"
                                       Foreground="WhiteSmoke"
                                       HorizontalAlignment="Left"
                                       Height="23" Margin="6" 
                                       TextWrapping="Wrap"
                                       Text="Y_y:" 
                                       VerticalAlignment="Top" Width="22" FontSize="18"/>
                                <TextBlock Grid.Row="1"
                                       Grid.Column="1" ToolTip="圆孔偏移量"
                                       Foreground="WhiteSmoke" 
                                       HorizontalAlignment="Left"
                                       Height="23" Margin="6" 
                                       TextWrapping="Wrap" 
                                       Text="{Binding ShiftY }" 
                                       VerticalAlignment="Top"
                                       Width="120" FontSize="18"/>
                            </Grid>
                          
                            <TextBlock Foreground="WhiteSmoke"
                                   VerticalAlignment="Center" 
                                   TextAlignment="Center" 
                                   FontSize="30" 
                                   Text="{Binding JudgeTextCircular, Converter={StaticResource JudgeTextCircular}}"
                                   Background="{Binding JudgeColorCircular, Converter={StaticResource JudgeColorCircular}}"/>
                            <TextBlock Foreground="WhiteSmoke"
                                       VerticalAlignment="Center"
                                       TextAlignment="Center" FontSize="30"
                                       Text="{Binding JudgeText_TabletPredictor, Converter={StaticResource JudgeText_TabletPredictor}}" 
                                       Background="{Binding JudgeColor_TabletPredictor, Converter={StaticResource JudgeColor_TabletPredictor}}"/>

                            <views:uclDiskView/>
                            <views:uclRatio/>
                            <TextBlock Text="{Binding LatestOPID}"
                                   Foreground="#FF008BFF" 
                                   FontWeight="Bold" FontSize="18"/>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                
                                <TextBlock  Text="总数:" FontSize="20" HorizontalAlignment="Left"/>
                                <TextBlock  Grid.Column="1" Text="{Binding GloPara.TotalTablet}" FontSize="20" Foreground="GreenYellow" HorizontalAlignment="Center"/>
                                <Button Grid.Row="1" Style="{StaticResource ButtonStyle1}" Margin="2 2 0 0" Content="清零" Command="{Binding CleanCountCommand}"></Button>

                            </Grid>


                            <!--<StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                                <Button Content=" 读" Command="{Binding Test1Command}"/>
                                <Button Content=" 写" Command="{Binding Test2Command}"/>
                            </StackPanel>-->



                        </StackPanel>
                    </GroupBox>
                </Grid>

                <GridSplitter Background="Black"  Height="5" Grid.Row="1"  HorizontalAlignment="Stretch" VerticalAlignment="Top" />
                <Grid Grid.Row="1" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <!--<ColumnDefinition Width="*" />-->
                    </Grid.ColumnDefinitions>
                    <TabControl Grid.Column="0" Background="White" >
                        <TabItem Header="日志">
                            <dj:NLogViewer />
                        </TabItem>
                        <TabItem Header="一般">
                            <Border Background="Gray" CornerRadius="10">
                                <StackPanel HorizontalAlignment="Left" VerticalAlignment="Top">
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                                        <TextBlock Foreground="Black" HorizontalAlignment="Center" VerticalAlignment="Center" Text="较重要图片自动清理日期:" />
                                        <TextBox Grid.Column="1" Margin="0" TextAlignment="Center" IsReadOnly="{Binding VisibilitySettings ,Converter={StaticResource Bool2BoolInv}}" MinWidth="30" Text="{Binding GloPara.CleanDay_long}"/>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                                        <TextBlock Foreground="Black" HorizontalAlignment="Center" VerticalAlignment="Center" Text="不重要图片自动清理日期:"/>
                                        <TextBox Grid.Column="1" Margin="0"  TextAlignment="Center" IsReadOnly="{Binding VisibilitySettings ,Converter={StaticResource Bool2BoolInv}}" MinWidth="30" Text="{Binding GloPara.CleanDay_short}"/>
                                        <Button MinWidth="50" MinHeight="20" Content="清理日期前的图片" Command ="{Binding CleanCommand}"/>
                                    </StackPanel>
                                    
                                </StackPanel>
                            </Border>
                        </TabItem>
                        <TabItem Header="螺丝位置参数" Visibility="{Binding VisibilitySettings,Converter={StaticResource Bool2Visbility}}">
                            <views:uclScrewParametersSetting/>
                        </TabItem>
                        <TabItem Header="螺丝位置参数2" Visibility="{Binding VisibilitySettings,Converter={StaticResource Bool2Visbility}}">
                            <views:uclScrewParametersSetting2/>
                        </TabItem>
                        <TabItem Header="油脂参数" Visibility="{Binding VisibilitySettings,Converter={StaticResource Bool2Visbility}}">
                            <StackPanel>
                                <views:uclGreaseParametersView/>
                            </StackPanel>
                        </TabItem>
                    </TabControl>
                </Grid>
            </Grid>
        </Grid>

    </Grid>
</Window>
