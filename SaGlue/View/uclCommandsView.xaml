<UserControl x:Class="SaGlue.View.uclCommandsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:SaGlue.View"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
     

        <Style x:Key="CheckBoxStyle" TargetType="{x:Type CheckBox}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="False" />
            <Setter Property="FocusVisualStyle" Value="{DynamicResource CheckBoxFocusVisual}" />
            <Setter Property="Height" Value="52"/>
            <Setter Property="IsChecked" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid Height="{TemplateBinding Height}" Width="{TemplateBinding Height}">
                                <Rectangle x:Name="CheckBoxRectangle" Fill="White" Opacity="0.3" RadiusY="5" RadiusX="5"/>
                                <Rectangle x:Name="CheckBoxRectangleOut" Stroke="#FFABADB3" StrokeThickness="1" RadiusY="5" RadiusX="5"/>
                                <Grid x:Name="CheckedMark" Height="{TemplateBinding Height}" Width="{TemplateBinding Height}" Visibility="Collapsed" >
                                    <Viewbox>
                                        <Grid>
                                            <Path SnapsToDevicePixels="True" StrokeThickness="3" Data="M1,9 L10,17" Stroke="#3553ad"/>
                                            <Path SnapsToDevicePixels="True" StrokeThickness="3" Data="M8,17 L20,4" Stroke="#3553ad"/>
                                        </Grid>
                                    </Viewbox>
                                </Grid>
                            </Grid>
                            <ContentPresenter Grid.Column="1" VerticalAlignment="Center" Margin="8,0,0,0"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="CheckedMark" Property="Visibility" Value="Visible"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--togg控件-->
        <Style x:Key="AndroidToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Viewbox>
                            <Border x:Name="Border" CornerRadius="10"
                            Background="#FFFFFFFF"
                            Width="40" Height="20">
                                <Border.Effect>
                                    <DropShadowEffect ShadowDepth="0.5" Direction="0" Opacity="0.3" />
                                </Border.Effect>
                                <Ellipse x:Name="Ellipse" Fill="#FFFFFFFF" Stretch="Uniform"
                                 Margin="2 1 2 1"
                                 Stroke="Gray" StrokeThickness="0.2"
                                 HorizontalAlignment="Stretch">
                                    <Ellipse.Effect>
                                        <DropShadowEffect BlurRadius="10" ShadowDepth="1" Opacity="0.3" Direction="260" />
                                    </Ellipse.Effect>
                                </Ellipse>
                            </Border>
                        </Viewbox>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="Checked">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="Border"
                                                    Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                    To="#FF4CD661"
                                                    Duration="0:0:0.1" />
                                        <ThicknessAnimation Storyboard.TargetName="Ellipse"
                                                        Storyboard.TargetProperty="Margin"
                                                        To="20 1 2 1"
                                                        Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Unchecked">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="Border"
                                                    Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                    To="White"
                                                    Duration="0:0:0.1" />
                                        <ThicknessAnimation Storyboard.TargetName="Ellipse"
                                                        Storyboard.TargetProperty="Margin"
                                                        To="2 1 2 1"
                                                        Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



        <Storyboard x:Key="OpenMenuTest">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="GridMenuTest">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="-200"/>
            </DoubleAnimationUsingKeyFrames>

        </Storyboard>
        <Storyboard x:Key="CloseTest">

            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="GridBackground">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="GridMenuTest">
                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

    </UserControl.Resources>
    <!--这里会报错-->
    <UserControl.Triggers>
        <!--<EventTrigger RoutedEvent="ButtonBase.Click" SourceName="ButtonCloseTest">
            <BeginStoryboard  Storyboard="{StaticResource CloseMenuTest}"/>
        </EventTrigger>-->
        <EventTrigger RoutedEvent="MenuItem.Click" SourceName="ButtonOpenTest">
            <BeginStoryboard Storyboard="{StaticResource OpenMenuTest}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="MenuItem.Click" SourceName="ButtonOpenDistr">
            <BeginStoryboard Storyboard="{StaticResource CloseTest}"/>
        </EventTrigger>
    </UserControl.Triggers>

    <Grid>
        <Grid>
            <Border CornerRadius="6" Background="Black" Opacity="0.4"/>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="1" Margin="2" Foreground="Silver" Text="菜单" VerticalAlignment="Center" TextAlignment="Left"/>
                    <Menu Grid.Column="0"  Width="80" HorizontalAlignment="Center"  VerticalAlignment="Center">
                        <MenuItem Header="MENU" Width="80" >
                            <MenuItem x:Name="ButtonOpenTest"   Header="Test" ToolTip="测试" Height="20" Width="130"  Margin="5"/>
                            <MenuItem x:Name="ButtonOpenDistr"  Header="Distr" ToolTip="Distr" Height="20" Width="130" />

                        </MenuItem>
                    </Menu>
                </Grid>
                <Grid x:Name="GridBackground" Grid.Row="1">
                    <StackPanel Orientation="Vertical" Margin="2">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <CheckBox  Width="140" Height="25"  Content="Correction" Foreground="WhiteSmoke" FontSize="20" IsChecked="{Binding TestOrigin}" Style="{StaticResource CheckBoxStyle}"  />
                            <Button Grid.Column="1" Margin="10,2,10,2" Content="校正" Command="{Binding CorrectionCommand}"  />
                        </Grid>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="使用本地图片" HorizontalAlignment="Right" VerticalAlignment="Center" FontSize="16" Foreground="WhiteSmoke"/>
                            <ToggleButton  Grid.Column="0" Width="50" Height="35"  HorizontalAlignment="Left" IsChecked="{Binding UseLocalImage}" Style="{StaticResource AndroidToggleButton}"  />
                            <Button Grid.Column="1" Margin="10,2,10,2" Content="选择图片" Command="{Binding UseLocalImageCommand}"  />
                        </Grid>
                        <Button Margin="2" Background="SkyBlue" FontWeight="Black" Command="{Binding SaveMoParaCommand}">保存设定</Button>

                        <TabControl>

                            <TabItem Header="MO">
                                <ScrollViewer Margin="2,2,2,2" VerticalScrollBarVisibility="Auto" >
                                    <!--<xctk:PropertyGrid AutoGenerateProperties="True" SelectedObject="{Binding MoParameters}" />-->
                                </ScrollViewer>
                            </TabItem>
                            <TabItem Header="PLC">
                                <ScrollViewer Margin="2,2,2,2" VerticalScrollBarVisibility="Auto" >
                                    <!--<xctk:PropertyGrid AutoGenerateProperties="True" SelectedObject="{Binding PlcCtrl}" />-->
                                </ScrollViewer>
                            </TabItem>
                            <TabItem Header="Spin">
                                <ScrollViewer Margin="2,2,2,2" VerticalScrollBarVisibility="Auto">
                                    <!--<xctk:PropertyGrid AutoGenerateProperties="True" SelectedObject="{Binding SpinCtrl}" />-->
                                </ScrollViewer>
                            </TabItem>
                            <TabItem Header="Global">
                                <ScrollViewer Margin="2,2,2,2" VerticalScrollBarVisibility="Auto">
                                    <!--<xctk:PropertyGrid AutoGenerateProperties="True" SelectedObject="{Binding GloPara}" />-->
                                </ScrollViewer>
                            </TabItem>
                        </TabControl>

                        <!--<Button Margin="2" FontFamily="{StaticResource Agressive}" Command="{Binding SyncBDLDParaCommand}" Content="SYNC"/>-->
                    </StackPanel>
                </Grid>
                <Grid Visibility="Hidden"  Grid.Row="1" x:Name="GridMenuTest" Width="200"  HorizontalAlignment="Right" Margin="0 0 -200 0" Background="White" RenderTransformOrigin="0.5,0.5">
                    <Grid.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Grid.RenderTransform>

                    <ScrollViewer >
                        <!--<xctk:PropertyGrid AutoGenerateProperties="True" SelectedObject="{Binding GloPara}" />-->
                    </ScrollViewer>

                </Grid>


            </Grid>
        </Grid>
    </Grid>




</UserControl>
